// This file is generated by cargo2android.py --config cargo2android.json.
// Do not modify this file as changes will be overridden on upgrade.

package {
    default_applicable_licenses: ["external_rust_crates_async-stream_license"],
}

// Added automatically by a large-scale-change
// See: http://go/android-license-faq
license {
    name: "external_rust_crates_async-stream_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-MIT",
    ],
    license_text: [
        "LICENSE",
    ],
}

rust_defaults {
    name: "async-stream_test_defaults",
    crate_name: "async_stream",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.4",
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2018",
    rustlibs: [
        "libasync_stream",
        "libfutures_core",
        "libfutures_util",
        "libpin_project_lite",
        "libtokio",
        "libtokio_test",
    ],
    proc_macros: [
        "libasync_stream_impl",
        "librustversion",
    ],
}

rust_test {
    name: "async-stream_test_tests_for_await",
    defaults: ["async-stream_test_defaults"],
    host_supported: true,
    srcs: ["tests/for_await.rs"],
    test_options: {
        unit_test: true,
    },
}

rust_test {
    name: "async-stream_test_tests_spans_preserved",
    defaults: ["async-stream_test_defaults"],
    host_supported: true,
    srcs: ["tests/spans_preserved.rs"],
    test_options: {
        unit_test: true,
    },
}

rust_test {
    name: "async-stream_test_tests_try_stream",
    defaults: ["async-stream_test_defaults"],
    host_supported: true,
    srcs: ["tests/try_stream.rs"],
    test_options: {
        unit_test: true,
    },
}

rust_library {
    name: "libasync_stream",
    host_supported: true,
    crate_name: "async_stream",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.4",
    srcs: ["src/lib.rs"],
    edition: "2018",
    rustlibs: [
        "libfutures_core",
        "libpin_project_lite",
    ],
    proc_macros: ["libasync_stream_impl"],
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
}
